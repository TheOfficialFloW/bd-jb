/*
 * Copyright (C) 2021-2024 Andy Nguyen
 *
 * This software may be modified and distributed under the terms
 * of the MIT license.  See the LICENSE file for details.
 */

package com.bdjb;

import com.bdjb.exploit.kernel.ExploitKernelInterface;
import com.bdjb.exploit.sandbox.ExploitDefaultImpl;
import com.bdjb.exploit.sandbox.ExploitSandboxInterface;
import com.bdjb.exploit.sandbox.ExploitServiceProxyImpl;
import java.lang.reflect.Method;

public class Exploit {
  public static void main(Method screenPrintln) {
    Screen.setRemotePrintln(screenPrintln);
    Screen.println("[*] Escaping Java Sandbox...");

    Class[] sandboxExploits = new Class[] {ExploitDefaultImpl.class, ExploitServiceProxyImpl.class};

    for (int i = 0; i < sandboxExploits.length; i++) {
      try {
        ExploitSandboxInterface exploit =
            (ExploitSandboxInterface) sandboxExploits[i].newInstance();
        if (exploit.trigger()) {
          break;
        }
      } catch (Exception e) {
        continue;
      }
    }

    if (System.getSecurityManager() != null) {
      Screen.println("[-] Error could not disable security manager.");
      return;
    }

    Screen.println("[*] Exploiting kernel...");

    Class[] kernelExploits = new Class[] {};

    for (int i = 0; i < kernelExploits.length; i++) {
      try {
        ExploitKernelInterface exploit = (ExploitKernelInterface) kernelExploits[i].newInstance();
        if (exploit.trigger()) {
          break;
        }
      } catch (Exception e) {
        continue;
      }
    }
  }
}
